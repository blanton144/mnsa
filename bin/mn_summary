#!/usr/bin/env python
# encoding: utf-8
#
# @Author: Michael Blanton
# @Date: Aug 21, 2020
# @Filename: mn_summary
# @License: BSD 3-Clause
# @Copyright: Michael Blanton


from __future__ import division
from __future__ import print_function
from __future__ import absolute_import
from __future__ import unicode_literals

import argparse
import os
import sys
import numpy as np
import fitsio


if __name__ == '__main__':

    parser = argparse.ArgumentParser(
        prog=os.path.basename(sys.argv[0]),
        description='Performs an arithmetic operation.')

    parser.add_argument('-v', '--version', dest='version',
                        type=str, default='0.3.0',
                        help='MNSA configuration version')

    parser.add_argument('-a', '--aperture', dest='aperture',
                        type=str, default='AP06',
                        help='aperture for SPS results')

    args = parser.parse_args()
    version = args.version
    aperture = args.aperture

    sumfile = os.path.join(os.getenv('MNSA_DATA'), version,
                           'mnsa-{version}.fits'.format(version=version))

    donefile = os.path.join(os.getenv('MNSA_DATA'), version,
                            'mn-{version}-done.fits'.format(version=version))

    photfile = os.path.join(os.getenv('MNSA_DATA'),
                            version + '.analysis',
                            'manga-legacyphot-{version}.fits'.format(version=version))
    ellipse = fitsio.read(photfile, ext='ELLIPSE')

    spsfile = os.path.join(os.getenv('MNSA_DATA'),
                           version, 'sps',
                           'kc-params-{version}-{aperture}.fits'.format(version=version,
                                                                        aperture=aperture))
    sps = fitsio.read(photfile)

    done = fitsio.read(donefile)

    drpfile = os.path.join(os.getenv('MANGA_SPECTRO_REDUX'),
                           'v3_1_1', 'drpall-v3_1_1.fits')

    pipe3dfile = os.path.join(os.getenv('MANGA_PIPE3D'),
                              'v3_1_1', '3.1.1',
                              'SDSS17Pipe3D_v3_1_1.fits')
    pipe3d = fitsio.read(pipe3dfile)

    drp = fitsio.read(drpfile)

    sum_dtype = drp.dtype.descr
    exclude = ['plate', 'ifu', 'plateifu']
    for x in done.dtype.descr:
        if (x[0] not in exclude):
            sum_dtype.append(x)
    sum_dtype.append(('ipipe3d', np.int32))

    summary = np.zeros(len(drp), dtype=sum_dtype)
    for n in summary.dtype.names:
        if(n in drp.dtype.names):
            summary[n] = drp[n]
        if(n in done.dtype.names):
            summary[n] = done[n]

    summary['ipipe3d'] = - 1
    for i, s in enumerate(summary):
        ipipe3d = np.where(pipe3d['plateifu'] == s['plateifu'])[0]
        if(len(ipipe3d) > 0):
            summary['ipipe3d'][i] = ipipe3d[0]

    hdr = list()
    hdr.append({'name': 'APERTURE',
                'value': aperture,
                'comment': 'aperture used for SPS'})
    hdr.append({'name': 'MNSA_VER',
                'value': version,
                'comment': 'MNSA version'})

    fitsio.write(sumfile, summary, header=hdr, extname='SUMMARY',
                 clobber=True)
    fitsio.write(sumfile, sps, extname='SPS',
                 clobber=False)
    fitsio.write(sumfile, ellipse, extname='ELLIPSE',
                 clobber=False)
