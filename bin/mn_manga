#!/usr/bin/env python
# encoding: utf-8
#
# @Author: Michael Blanton
# @Date: Aug 21, 2020
# @Filename: ms_dlis
# @License: BSD 3-Clause
# @Copyright: Michael Blanton


from __future__ import division
from __future__ import print_function
from __future__ import absolute_import
from __future__ import unicode_literals

import argparse
import os
import sys
import numpy as np
import mnsa.reconstruct as reconstruct
import mnsa.utils.configuration as configuration

if __name__ == '__main__':

    parser = argparse.ArgumentParser(
        prog=os.path.basename(sys.argv[0]),
        description='Performs an arithmetic operation.')

    parser.add_argument('-v', '--version', dest='version',
                        type=str, default='v0',
                        help='MNSA configuration version')

    parser.add_argument('-p', '--plate-ifu', dest='plateifu',
                        type=str, help='plate-ifu for MaNGA observations')

    args = parser.parse_args()
    version = args.version
    plateifu = args.plateifu

    mnsa_config = configuration.MNSAConfig(version=version)
    cfg = mnsa_config.cfg

    crr_lambda = np.float32(cfg['MANGA']['crr_lambda'])
    release = cfg['MANGA']['release']
    pixscale = np.float32(cfg['General']['pixscale'])
    plate, ifu = [int(x) for x in plateifu.split('-')]

    SpectrumG = reconstruct.set_G(plate=plate,
                                  ifu=ifu,
                                  release=release,
                                  waveindex=None,
                                  lam=crr_lambda,
                                  dimage=pixscale,
                                  psf_slices=True)

    plateifu_dir = os.path.join(os.getenv('MNSA_DATA'),
                                version, str(plate), str(ifu))
    native_dir = os.path.join(plateifu_dir, 'native')

    manga_file = os.path.join(native_dir,
                              '{plateifu}-manga-logcube-crr.fits.gz')
    manga_file = manga_file.format(plateifu=plateifu)

    G_cube = reconstruct.write(SpectrumG, manga_file)
